[tool.poetry]
name = "bearboto3"
version = "0.1.1"
description = "Facilitates using beartype runtime type-checking with the AWS SDK"
authors = ["Paul Hutchings <dev@studiop.page>"]
maintainers = ["Paul Hutchings <dev@studiop.page>"]
readme = "README.md"
homepage = "https://github.com/beartype/bearboto3"

[tool.poetry.dependencies]
python = "^3.7"
beartype = "^0.9.0"

# Optional type stubs (will be installed as runtime dependencies this way)
mypy-boto3-s3 = {version = "^1.21.0", optional = true}
mypy-boto3-ec2 = {version = "^1.21.1", optional = true}
mypy-boto3-dynamodb = {version = "^1.21.4", optional = true}
mypy-boto3-iam = {version = "^1.21.2", optional = true}
mypy-boto3-sns = {version = "^1.21.0", optional = true}
mypy-boto3-sqs = {version = "^1.21.0", optional = true}
mypy-boto3-lambda = {version = "^1.21.0", optional = true}

[tool.poetry.dev-dependencies]
boto3 = "^1.20.5"
pylint = "^2.11.1"
pytest = "^6.2.5"
black = "^21.10b0"
moto = {extras = ["all"], version = "^2.3.0"}
boto3-stubs = {extras = ["all"], version = "^1.20.26"}
pytest-cov = "^3.0.0"
coverage = {extras = ["toml"], version = "^6.1.2"}
Jinja2 = "^3.0.3"
pytest-xdist = "^2.4.0"
docker = "^5.0.3"

[tool.poetry.extras]
s3 = ["mypy-boto3-s3"]
ec2 = ["mypy-boto3-ec2"]
dynamodb = ["mypy-boto3-dynamodb"]
sns = ["mypy-boto3-sns"]
sqs = ["mypy-boto3-sqs"]
iam = ["mypy-boto3-iam"]
lambda = ["mypy-boto3-lambda"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.master]
fail-under = 9
pyversion = 3.7
max-line-length = 120
ignore = [
    "tests"
]

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-function-docstring",
    "redefined-outer-name",
    "too-many-lines",
    "duplicate-code"
]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = [
    "--cov",
    "--cov-config=pyproject.toml",
    "--cov-report=term-missing",
    "--numprocesses=4"
]

[tool.coverage.run]
branch = true
source = [
    "bearboto3"
]
omit = [
    'bearboto3/__init__.py'
]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'if TYPE_CHECKING:'
]
